openapi: 3.0.0
info:
  title: "API zur Verwaltung von Patienten"
  version: "1.0.0"
  description: "Diese API ermöglicht das Erstellen, Abrufen, Löschen, Aktualisieren und Verwalten von Patienten."

servers:
  - url: http://localhost:5000
    description: "Lokale Entwicklungsumgebung"

paths:
  /patients/{id}:
    put:
      summary: "Patientendaten aktualisieren"
      description: "Aktualisiert die Daten eines bestehenden Patienten anhand der übergebenen Informationen."
      tags:
        - Patienten
      parameters:
        - name: id
          in: path
          required: true
          description: "Die eindeutige ID des Patienten, dessen Daten aktualisiert werden sollen."
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        description: "Die zu aktualisierenden Patientendaten."
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: "Vorname des Patienten."
                  example: "John"
                last_name:
                  type: string
                  description: "Nachname des Patienten."
                  example: "Doe"
                title:
                  type: string
                  description: "Titel des Patienten (z.B. Herr, Frau, Dr.)."
                  example: "Herr"
                dob:
                  type: string
                  format: date
                  description: "Geburtsdatum des Patienten (Format: YYYY-MM-DD)."
                  example: "1985-10-20"
                gender:
                  type: string
                  description: "Geschlecht des Patienten."
                  example: "männlich"
                physician:
                  type: string
                  description: "Name des betreuenden Arztes."
                  example: "Dr. Müller"
                ancestry:
                  type: string
                  description: "Abstammung oder ethnische Zugehörigkeit des Patienten."
                  example: "europäisch"
                inconsistency:
                  type: boolean
                  description: "Informationen zur Dateninkonsistenz, falls vorhanden."
                  example: false
                eyeid:
                  type: string
                  description: "Eindeutige Augen-ID des Patienten."
                  example: "12345-ABCDE"
      responses:
        '200':
          description: "Patient erfolgreich aktualisiert"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Patient erfolgreich aktualisiert"
        '400':
          description: "Ungültige Anfrage aufgrund von Validierungsfehlern oder falschem Datenformat."
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Ungültige Daten. Überprüfen Sie die Eingaben."
        '404':
          description: "Patient nicht gefunden"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Patient mit ID 123 nicht gefunden"
        '500':
          description: "Datenbankfehler oder anderer Serverfehler"
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Fehler beim Speichern der Patientendaten"
